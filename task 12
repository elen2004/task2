using System;

class Program
{
    static void Main(string[] args)
    {
        int[] vector = { 10, 3, 8, 5, 7, 1 };

        BubbleSort bubbleSort = new BubbleSort();
        bubbleSort.Sort(vector);

        InsertionSort insertionSort = new InsertionSort();
        insertionSort.Sort(vector);

        SelectionSort selectionSort = new SelectionSort();
        selectionSort.Sort(vector);
    }
}

abstract class SortingAlgorithm
{
    public void Sort(int[] array)
    {
        Console.WriteLine($"Sorting using {this.GetType().Name}:");

        for (int i = 0; i < array.Length - 1; i++)
        {
            for (int j = 0; j < array.Length - 1 - i; j++)
            {
                if (Compare(array[j], array[j + 1]))
                {
                    Swap(ref array[j], ref array[j + 1]);
                }
            }
        }

        PrintArray(array);
    }

    protected abstract bool Compare(int a, int b);

    protected void Swap(ref int a, ref int b)
    {
        int temp = a;
        a = b;
        b = temp;
    }

    protected void PrintArray(int[] array)
    {
        foreach (var num in array)
        {
            Console.Write($"{num} ");
        }
        Console.WriteLine();
    }
}

class BubbleSort : SortingAlgorithm
{
    protected override bool Compare(int a, int b)
    {
        return a > b;
    }
}

class InsertionSort : SortingAlgorithm
{
    protected override bool Compare(int a, int b)
    {
        return a < b;
    }
}

class SelectionSort : SortingAlgorithm
{
    protected override bool Compare(int a, int b)
    {
        return a > b;
    }
}
